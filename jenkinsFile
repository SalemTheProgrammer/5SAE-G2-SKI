pipeline {
    agent any

    stages {
        stage('GIT') {
            steps {
                git branch: 'INESRDISSI-5SAE7-G2',
                    url: 'https://github.com/SalemTheProgrammer/5SAE-G2-SKI.git'
            }
        }
        
        stage('Compile Stage') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'mvn -Dtest=InstructorServicesImplTest test'
            }
        }

        stage('SonarQube') {
            steps {
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=Sonarsonar1* -Dmaven.test.skip=true'
            }
        }

        stage('Nexus') {
            steps {
                sh 'mvn deploy -Dmaven.test.skip=true'
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin'
                }
            }
        }

        stage('Build and Push Docker Image') {
    steps {
        echo "Building Docker Image for the application"
        echo "Docker Username: ${DOCKER_USERNAME}" // Pour le d√©bogage
        sh "docker build -t ${DOCKER_USERNAME}/gestion-station-ski:1.0 ."
        
        echo "Pushing Docker Image to Docker Hub"
        sh "docker push ${DOCKER_USERNAME}/gestion-station-ski:1.0"
    }
}


        stage('Deploy with Docker Compose') {
            steps {
                echo "Stopping and removing existing containers if any"
                sh 'docker compose down'
                
                echo "Deploying with Docker Compose"
                sh 'docker compose up -d --build'
            }
        }
    }
}
